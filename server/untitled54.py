# -*- coding: utf-8 -*-
"""Untitled54.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OQ30iijOVTczXVM4vVJe9MJJpH4cFSbM
"""

import pandas as pd
from datetime import datetime

# Load CSV
df = pd.read_csv("APY.csv")
df.columns = df.columns.str.strip()  # Clean column names

# Determine current season based on today's date (approximate)
today_month = datetime.today().month
if today_month in [6,7,8,9,10]:
    current_season = 'Kharif'
elif today_month in [11,12,1,2,3]:
    current_season = 'Rabi'
elif today_month in [3,4,5]:
    current_season = 'Zaid/Summer'
else:
    current_season = 'Unknown'

print(f"Current season based on today: {current_season}")

# Take user input
state_input = input("Enter the State: ").strip()
district_input = input("Enter the District: ").strip()

# Filter by State, District, and current season
filtered_df = df[
    (df['State'].str.strip().str.lower() == state_input.lower()) &
    (df['District'].str.strip().str.lower() == district_input.lower()) &
    (df['Season'].str.strip().str.lower() == current_season.lower())
]

if filtered_df.empty:
    print(f"No data found for {district_input}, {state_input} in {current_season} season.")
else:
    # Avoid zero or missing Area
    filtered_df = filtered_df[filtered_df['Area'] > 0]

    # Calculate Yield
    filtered_df['Yield'] = filtered_df['Production'] / filtered_df['Area']

    # Aggregate average yield per crop
    crop_yield = filtered_df.groupby('Crop')['Yield'].mean().reset_index()

    # Top 3 crops
    top3_crops = crop_yield.sort_values(by='Yield', ascending=False).head(3)

    print(f"\nTop 3 crops in {district_input}, {state_input} for {current_season} season:")
    print(top3_crops)